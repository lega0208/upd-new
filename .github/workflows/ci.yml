name: ci

on:
  push:
    branches:
      - main
  pull_request:

env:
  NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
  NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT: 3

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  main:
    name: Nx Cloud - Main Job
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout [main]
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Use the node_modules cache if available [npm]
        id: use-npm-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-16-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.use-npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - run: npx nx-cloud start-ci-run
      - run: npx nx workspace-lint
      - run: npx nx run-many --target=lint --projects=api,upd,db-updater,db-cli --parallel --maxParallel=3
      - run: NODE_ENV=production npx nx run-many --target=build --projects=api,upd,db-updater,db-cli --parallel --maxParallel=3
      - run: npx nx-cloud stop-all-agents
  pr:
    name: Nx Cloud - Main Job
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout [main]
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Use the node_modules cache if available [npm]
        id: use-npm-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-16-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.use-npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - run: npx nx-cloud start-ci-run
      - run: npx nx workspace-lint
      - run: npx nx run-many --target=lint --projects=api,upd,db-updater,db-cli --parallel --maxParallel=3
      - run: NODE_ENV=production npx nx run-many --target=build --projects=api,upd,db-updater,db-cli --parallel --maxParallel=3
      - run: npx nx-cloud stop-all-agents

  agents:
    runs-on: ubuntu-latest
    name: Agent 1
    timeout-minutes: 60
    strategy:
      matrix:
        agent: [ 1, 2, 3 ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Use the node_modules cache if available [npm]
        id: use-npm-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-16-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.use-npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent
